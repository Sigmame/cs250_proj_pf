#=======================================================================
# UCB VLSI FLOW: Process Technology Makefile fragment
#-----------------------------------------------------------------------
# Yunsup Lee (yunsup@cs.berkeley.edu)
#
# This makefile fragment will select which standard cell library you
# will be using.
#

UCB_STDCELLS = synopsys-32nm/multi_vt
vlsidir = vlsi
include $(basedir)/../Makefrag

ifndef CLOCK_PERIOD
CLOCK_PERIOD=1.0
endif

ifndef VOLTAGE
VOLTAGE=STANDARD
endif

# invokes vlsi_mem_gen script to create verilog for SRAM macros
$(basedir)/generated-src/${TARGET}.v: $(basedir)/../src/*.scala
	cd $(basedir)/../sbt && $(SBT) "project work" "run hsOptFlow $(PIPE_STAGES) --backend v --targetDir ../$(vlsidir)/generated-src --noInlineMem --Wall"
	cd $(basedir)/generated-src && \
        mv ${MODEL}.v ${TARGET}.v && \
	mv ${MODEL}.conf ${TARGET}.conf && \
	sed -i 's/^/..\/src\/vlsi_mem_gen /' ${TARGET}.conf && \
	sed -i 's/$$/ >> ${TARGET}.v/' ${TARGET}.conf && \
	sh ${TARGET}.conf

clock_period = ${CLOCK_PERIOD}
clock_uncertainty = 0.04

vcs_clock_period = 0$(shell echo "scale=4; ${clock_period}*0.5" | bc)
dc_clock_period = 0$(shell echo "scale=4; ${clock_period}*1.0" | bc)

input_delay  = 0.1
output_delay = 0.1

# standard voltage operation (VDD = 1.05V)
ifeq (${VOLTAGE}, STANDARD)
  ifndef PIPE_OVERHEAD
    PIPE_OVERHEAD = 0.125
  endif

  ss_corner_stdcells = ss0p95v125c
  tt_corner_stdcells = tt1p05v25c
  ff_corner_stdcells = ff1p16vn40c
endif

# middle voltage operation (VOLTAGE = 0.85V)
ifeq (${VOLTAGE}, MIDDLE)
  ifndef PIPE_OVERHEAD
    PIPE_OVERHEAD = 0.15
  endif
  ss_corner_stdcells = ss0p75v125c
  tt_corner_stdcells = tt0p85v25c
  ff_corner_stdcells = ff0p95vn40c
endif

# low voltage operation (VOLTAGE = 0.78V)
ifeq (${VOLTAGE}, LOW)
  ifndef PIPE_OVERHEAD
    PIPE_OVERHEAD = 0.175
  endif
  ss_corner_stdcells = ss0p7v125c
  tt_corner_stdcells = tt0p78v25c
  ff_corner_stdcells = ff0p85vn40c
endif

filler_cells = SHFILL128_RVT SHFILL64_RVT SHFILL3_RVT SHFILL2_RVT SHFILL1_RVT

# use multiple vt stdcell libraries
mw_ref_libs = \
  cells_hvt.mw \
  cells_rvt.mw \
  cells_lvt.mw \

# using typical corner only
target_library_files = \
  saed32hvt_$(tt_corner_stdcells).db \
  saed32rvt_$(tt_corner_stdcells).db \
  saed32lvt_$(tt_corner_stdcells).db \

# SRAM libraries
mw_sram_libs = ../$(refdir)/SRAM1R1W1024x32.mw
db_sram_libs = SRAM1R1W1024x32.db

